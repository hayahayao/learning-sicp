;我们先按愿望思维的方式假设已经有构造矩形及获取矩形长/宽的函数

;周长
(define (perimeter-rectangle r)
  (let ((length (length-of-rectangle r))
        (width (width-of-rectangle r)))
    (* 2 (+ length width))))
;面积
(define (area-rectangle r)
  (let ((length (length-of-rectangle r))
        (width (width-of-rectangle r)))
    (* length width)))

;第一种表示方法：使用两对线段，一对表示长边，一对表示宽边
(define (make-rectangle length-1 length-2 width-1 width-2)
  (cons (cons length-1 length-2)
        (cons width-1 width-2)))
(define (length-1-rectangle r)
  (car (car r)))
(define (length-2-rectangle r)
  (car (cdr r)))
(define (width-1-rectangle r)
  (cdr (car r)))
(define (width-2-rectangle r)
  (cdr (cdr r)))
(define (length-of-rectangle r)
  (let ((length (length-1-rectangle r)))
    (let ((start (start-segment length))
          (end (end-segment length)))
      (- (x-point end)
         (x-point start)))))
(define (width-of-rectangle r)
  (let ((width (width-1-rectangle r)))
    (let ((start (start-segment length))
          (end (end-segment length)))
      (- (y-point end)
         (y-point start)))))

;第二种表示方法：只使用两条边，一条表示长一条表示宽
(define (make-rectangle length width)
  (cons length width))
(define (length-rectangle r)
  (car r))
(define (width-rectangle r)
  (cdr r))
(define (length-of-rectangle r)
  (let ((length (length-rectangle r)))
    (let ((start (start-segment length))
          (end (end-segment length)))
      (- (x-point end)
         (x-point start)))))
(define (width-of-rectangle r)
  (let ((width (width-rectangle r)))
    (let ((start (start-segment length))
          (end (end-segment length)))
      (- (y-point end)
         (y-point start)))))
